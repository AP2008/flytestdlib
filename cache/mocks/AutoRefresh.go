// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import cache "github.com/lyft/flytestdlib/cache"
import context "context"
import mock "github.com/stretchr/testify/mock"

// AutoRefresh is an autogenerated mock type for the AutoRefresh type
type AutoRefresh struct {
	mock.Mock
}

// Get provides a mock function with given fields: id
func (_m *AutoRefresh) Get(id string) (cache.Item, error) {
	ret := _m.Called(id)

	var r0 cache.Item
	if rf, ok := ret.Get(0).(func(string) cache.Item); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cache.Item)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrCreate provides a mock function with given fields: id, item
func (_m *AutoRefresh) GetOrCreate(id string, item cache.Item) (cache.Item, error) {
	ret := _m.Called(id, item)

	var r0 cache.Item
	if rf, ok := ret.Get(0).(func(string, cache.Item) cache.Item); ok {
		r0 = rf(id, item)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cache.Item)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, cache.Item) error); ok {
		r1 = rf(id, item)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Start provides a mock function with given fields: ctx
func (_m *AutoRefresh) Start(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
